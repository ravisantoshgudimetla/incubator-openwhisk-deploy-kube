---
apiVersion: v1
kind: Service
metadata:
  name: controller
  labels:
    name: controller
spec:
  selector:
    name: controller
  clusterIP: None
  ports:
    - port: 8080
      targetPort: 8080
      name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: controller.config
data:
  controller_opts: ""
  java_opts: -Xmx2g
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: controller
  labels:
    name: controller
spec:
  replicas: 1
  serviceName: "controller"
  template:
    metadata:
      labels:
        name: controller
    spec:
      restartPolicy: Always
      containers:
      - name: controller
        imagePullPolicy: IfNotPresent
        image: projectodd/controller:openshift-latest
        command: ["/bin/bash", "-c", "COMPONENT_NAME=$(hostname | cut -d'-' -f2) /init.sh `hostname | cut -d'-' -f2`"]
        ports:
        - name: controller
          containerPort: 8080
        env:
        # Properties for controller HA configuration
        # Must change these if changing number of replicas
        - name: "CONTROLLER_LOCALBOOKKEEPING"
          value: "TRUE"
        - name: "CONTROLLER_HA"
          value: "FALSE"
        - name: "CONTROLLER_INSTANCES"
          value: "1"
        - name: "AKKA_CLUSTER_SEED_NODES"
          value: "controller-0.controller.openwhisk"
        - name: "CONFIG_akka_actor_provider"
          value: "cluster"

        # extra JVM arguments
        - name: "JAVA_OPTS"
          valueFrom:
            configMapKeyRef:
              name: controller.config
              key: java_opts

        # extra controller arguments
        - name: "CONTROLLER_OPTS"
          valueFrom:
            configMapKeyRef:
              name: controller.config
              key: controller_opts

        # action runtimes
        - name: "RUNTIMES_MANIFEST"
          valueFrom:
            configMapKeyRef:
              name: whisk.runtimes
              key: runtimes

        # deployment version information
        - name:  "WHISK_VERSION_NAME"
          valueFrom:
            configMapKeyRef:
              name: whisk.config
              key: whisk_version_name
        - name:  "WHISK_VERSION_DATE"
          valueFrom:
            configMapKeyRef:
              name: whisk.config
              key: whisk_version_date
        - name: "WHISK_VERSION_BUILDNO"
          valueFrom:
            configMapKeyRef:
              name: whisk.config
              key: whisk_version_tag

        # specify limits
        - name: "LIMITS_ACTIONS_INVOKES_PERMINUTE"
          valueFrom:
            configMapKeyRef:
              name: whisk.limits
              key: actions_invokes_perMinute
        - name: "LIMITS_ACTIONS_INVOKES_CONCURRENT"
          valueFrom:
            configMapKeyRef:
              name: whisk.limits
              key: actions_invokes_concurrent
        - name: "LIMITS_ACTIONS_INVOKES_CONCURRENTINSYSTEM"
          valueFrom:
            configMapKeyRef:
              name: whisk.limits
              key: actions_invokes_concurrentInSystem
        - name: "LIMITS_TRIGGERS_FIRES_PERMINUTE"
          valueFrom:
            configMapKeyRef:
              name: whisk.limits
              key: triggers_fires_perMinute
        - name: "LIMITS_ACTIONS_SEQUENCE_MAXLENGTH"
          valueFrom:
            configMapKeyRef:
              name: whisk.limits
              key: actions_sequence_maxLength

        # properties for Kafka connection
        - name: "KAFKA_HOSTS"
          value: "$(KAFKA_SERVICE_HOST):$(KAFKA_SERVICE_PORT_KAFKA)"

        # properties for DB connection
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_username
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_password
        - name:  "DB_PROTOCOL"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_protocol
        - name: "DB_HOST"
          value: "$(COUCHDB_SERVICE_HOST)"
        - name: "DB_PORT"
          value: "$(COUCHDB_SERVICE_PORT_COUCHDB)"
        - name: "DB_PROVIDER"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_provider
        - name: "DB_WHISK_ACTIVATIONS"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_whisk_activations
        - name: "DB_WHISK_ACTIONS"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_whisk_actions
        - name: "DB_WHISK_AUTHS"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_whisk_auths

        # must match port used in livenessProbe below
        - name: "PORT"
          value: "8080"

        livenessProbe:
          httpGet:
            path: "/ping"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: "/ping"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
      initContainers:
      - name: wait-for-services
        image: busybox
        command: ['sh', '-cu', 'echo "$COUCHDB_SERVICE_HOST $KAFKA_SERVICE_HOST"']
      - name: wait-for-couchdb
        image: busybox
        command: ['sh', '-c', 'until wget -T 5 --spider http://${COUCHDB_SERVICE_HOST}:${COUCHDB_SERVICE_PORT}/_all_dbs; do echo waiting for couchdb; sleep 2; done;']
---
apiVersion: batch/v1
kind: Job
metadata:
  name: install-catalog
  namespace: openwhisk
spec:
  activeDeadlineSeconds: 600
  template:
    metadata:
      name: install-catalog
    spec:
      containers:
      - name: catalog
        image: projectodd/whisk_catalog:openshift-latest
        env:
          - name: "WHISK_CLI_VERSION"
            valueFrom:
              configMapKeyRef:
                name: whisk.config
                key: whisk_cli_version_tag
          - name: "WHISK_AUTH"
            valueFrom:
              secretKeyRef:
                name: whisk.auth
                key: system
          - name: "WHISK_API_HOST_NAME"
            value: "http://controller:8080"
      initContainers:
      - name: wait-for-controller
        image: busybox
        command: ['sh', '-c', 'until wget -T 5 --spider http://controller:8080/ping; do echo waiting for controller; sleep 2; done;']
      restartPolicy: Never
