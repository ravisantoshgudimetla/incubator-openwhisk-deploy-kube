---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alarmprovider
data:
  PORT: "8080"
  DB_PREFIX: "whisk_alarms_"
  CONTROLLER_HOST: "controller"
  CONTROLLER_PORT: "8080"
  env: |
    export TOKEN="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)"
    export NAMESPACE="$(cat /run/secrets/kubernetes.io/serviceaccount/namespace)"
    export ROUTER_HOST=$(curl -s --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H "Authorization: Bearer ${TOKEN}" "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/oapi/v1/namespaces/${NAMESPACE}/routes/openwhisk?pretty=true" | grep '"host":' | head -n 1 | awk -F '"' '{print $4}')
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: alarmprovider
  labels:
    name: alarmprovider
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: alarmprovider
    spec:
      restartPolicy: Always
      serviceAccountName: openwhisk
      volumes:
      - name: alarmprovider-config
        configMap:
          name: alarmprovider
      containers:
      - name: alarmprovider
        imagePullPolicy: IfNotPresent
        image: openwhisk/alarmprovider:1.1.7
        command: [ "/bin/bash", "-c", "source /alarmprovider_config/env; node /alarmsTrigger/app.js" ]
        envFrom:
        - configMapRef:
            name: alarmprovider
        env:
        - name: "DB_HOST"
          value: "$(COUCHDB_SERVICE_HOST):$(COUCHDB_SERVICE_PORT_COUCHDB)"
        - name:  "DB_PROTOCOL"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_protocol
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_username
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_password
        volumeMounts:
        - name: alarmprovider-config
          mountPath: "/alarmprovider_config"
      initContainers:
      - name: wait-for-couchdb
        image: busybox
        command: ['sh', '-cu', 'echo "$COUCHDB_SERVICE_HOST"']
      - name: install-alarms-catalog
        imagePullPolicy: IfNotPresent
        image: projectodd/whisk_alarms:openshift-latest
        envFrom:
        - configMapRef:
            name: alarmprovider
        env:
        - name: "DB_HOST"
          value: "$(COUCHDB_SERVICE_HOST):$(COUCHDB_SERVICE_PORT_COUCHDB)"
        - name:  "DB_PROTOCOL"
          valueFrom:
            configMapKeyRef:
              name: db.config
              key: db_protocol
        - name: "AUTH_WHISK_SYSTEM"
          valueFrom:
            secretKeyRef:
              name: whisk.auth
              key: system
        volumeMounts:
        - name: alarmprovider-config
          mountPath: "/alarmprovider_config"
 
